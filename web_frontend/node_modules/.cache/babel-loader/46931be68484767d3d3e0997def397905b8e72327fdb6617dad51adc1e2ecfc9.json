{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shree\\\\ai-credit-underwriting-system\\\\web_frontend\\\\src\\\\components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Chatbot from 'react-chatbot-kit';\nimport 'react-chatbot-kit/build/main.css';\nimport api from '../services/api';\nimport FileUploader from './FileUploader';\n\n// This is a more complete and functional Chatbot component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ActionProvider = ({\n  createChatBotMessage,\n  setState,\n  children\n}) => {\n  _s();\n  const [applicationId, setApplicationId] = useState(null);\n  const handleStart = () => {\n    const message = createChatBotMessage(\"Great! Let's start your application. What is your full name?\");\n    updateState(message);\n  };\n  const handleFullName = name => {\n    const message = createChatBotMessage(`Thank you, ${name}. What is your monthly income?`);\n    updateState(message, {\n      fullName: name\n    });\n  };\n  const handleIncome = income => {\n    const message = createChatBotMessage(`Got it. And what is the loan amount you are requesting?`);\n    updateState(message, {\n      monthlyIncome: parseFloat(income)\n    });\n  };\n  const handleLoanAmount = amount => {\n    const message = createChatBotMessage(`Finally, what is the purpose of this loan? (e.g., Car, Home, Personal)`);\n    updateState(message, {\n      loanAmount: parseFloat(amount)\n    });\n  };\n  p;\n  const handleLoanPurpose = async (purpose, prevState) => {\n    const applicationData = {\n      full_name: prevState.fullName,\n      monthly_income: prevState.monthlyIncome,\n      loan_amount: prevState.loanAmount,\n      loan_purpose: purpose\n    };\n    try {\n      const response = await api.post('/applications', applicationData);\n      const newAppId = response.data.id;\n      setApplicationId(newAppId);\n      const message = createChatBotMessage(`Your application has been created with ID: ${newAppId}. Now, please upload your documents.`, {\n        widget: 'docUploader',\n        payload: {\n          applicationId: newAppId\n        }\n      });\n      updateState(message);\n    } catch (error) {\n      const message = createChatBotMessage(\"Sorry, there was an error creating your application. Please try again.\");\n      updateState(message);\n      console.error(\"Application creation failed\", error);\n    }\n  };\n  const updateState = (message, payload = {}) => {\n    setState(prev => ({\n      ...prev,\n      messages: [...prev.messages, message],\n      ...payload\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: React.Children.map(children, child => {\n      return /*#__PURE__*/React.cloneElement(child, {\n        actions: {\n          handleStart,\n          handleFullName,\n          handleIncome,\n          handleLoanAmount,\n          handleLoanPurpose\n        }\n      });\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n_s(ActionProvider, \"jKtS8L32nPOP4tnXmAH8qr4Z+Hw=\");\n_c = ActionProvider;\nconst MessageParser = ({\n  children,\n  actions\n}) => {\n  const parse = message => {\n    var _children$props$state, _children$props$state2, _children$props$state3, _children$props$state4;\n    const lowerCaseMessage = message.toLowerCase();\n    if (lowerCaseMessage.includes(\"start\") || lowerCaseMessage.includes(\"hello\") || lowerCaseMessage.includes(\"hi\")) {\n      actions.handleStart();\n    } else if ((_children$props$state = children.props.state.messages.slice(-1)[0]) !== null && _children$props$state !== void 0 && _children$props$state.message.includes('full name')) {\n      actions.handleFullName(message);\n    } else if ((_children$props$state2 = children.props.state.messages.slice(-1)[0]) !== null && _children$props$state2 !== void 0 && _children$props$state2.message.includes('monthly income')) {\n      actions.handleIncome(message);\n    } else if ((_children$props$state3 = children.props.state.messages.slice(-1)[0]) !== null && _children$props$state3 !== void 0 && _children$props$state3.message.includes('loan amount')) {\n      actions.handleLoanAmount(message);\n    } else if ((_children$props$state4 = children.props.state.messages.slice(-1)[0]) !== null && _children$props$state4 !== void 0 && _children$props$state4.message.includes('purpose')) {\n      actions.handleLoanPurpose(message, children.props.state);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: React.Children.map(children, child => {\n      return /*#__PURE__*/React.cloneElement(child, {\n        parse: parse,\n        actions\n      });\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n};\n_c2 = MessageParser;\nconst ChatbotWrapper = ({\n  user\n}) => {\n  const config = {\n    botName: 'CreditBot',\n    initialMessages: [{\n      message: `Hello ${user.email}! Type \"start\" to begin a new credit application.`,\n      type: 'bot',\n      id: 1\n    }],\n    widgets: [{\n      widgetName: 'docUploader',\n      widgetFunc: props => {\n        const {\n          applicationId\n        } = props.payload;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(FileUploader, {\n            applicationId: applicationId,\n            docType: \"aadhaar\",\n            onUploadSuccess: () => console.log('Aadhaar uploaded!')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(FileUploader, {\n            applicationId: applicationId,\n            docType: \"salary_slip\",\n            onUploadSuccess: () => console.log('Salary slip uploaded!')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }, this);\n      },\n      mapStateToProps: [\"applicationId\"]\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: /*#__PURE__*/_jsxDEV(Chatbot, {\n      config: config,\n      messageParser: MessageParser,\n      actionProvider: ActionProvider\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 9\n  }, this);\n};\n_c3 = ChatbotWrapper;\nexport default ChatbotWrapper;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ActionProvider\");\n$RefreshReg$(_c2, \"MessageParser\");\n$RefreshReg$(_c3, \"ChatbotWrapper\");","map":{"version":3,"names":["React","useState","Chatbot","api","FileUploader","jsxDEV","_jsxDEV","ActionProvider","createChatBotMessage","setState","children","_s","applicationId","setApplicationId","handleStart","message","updateState","handleFullName","name","fullName","handleIncome","income","monthlyIncome","parseFloat","handleLoanAmount","amount","loanAmount","p","handleLoanPurpose","purpose","prevState","applicationData","full_name","monthly_income","loan_amount","loan_purpose","response","post","newAppId","data","id","widget","payload","error","console","prev","messages","Children","map","child","cloneElement","actions","fileName","_jsxFileName","lineNumber","columnNumber","_c","MessageParser","parse","_children$props$state","_children$props$state2","_children$props$state3","_children$props$state4","lowerCaseMessage","toLowerCase","includes","props","state","slice","_c2","ChatbotWrapper","user","config","botName","initialMessages","email","type","widgets","widgetName","widgetFunc","docType","onUploadSuccess","log","mapStateToProps","className","messageParser","actionProvider","_c3","$RefreshReg$"],"sources":["C:/Users/shree/ai-credit-underwriting-system/web_frontend/src/components/Chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Chatbot from 'react-chatbot-kit';\r\nimport 'react-chatbot-kit/build/main.css';\r\n\r\nimport api from '../services/api';\r\nimport FileUploader from './FileUploader';\r\n\r\n// This is a more complete and functional Chatbot component\r\n\r\nconst ActionProvider = ({ createChatBotMessage, setState, children }) => {\r\n    const [applicationId, setApplicationId] = useState(null);\r\n\r\n    const handleStart = () => {\r\n        const message = createChatBotMessage(\"Great! Let's start your application. What is your full name?\");\r\n        updateState(message);\r\n    };\r\n\r\n    const handleFullName = (name) => {\r\n        const message = createChatBotMessage(`Thank you, ${name}. What is your monthly income?`);\r\n        updateState(message, { fullName: name });\r\n    };\r\n\r\n    const handleIncome = (income) => {\r\n        const message = createChatBotMessage(`Got it. And what is the loan amount you are requesting?`);\r\n        updateState(message, { monthlyIncome: parseFloat(income) });\r\n    };\r\n\r\n    const handleLoanAmount = (amount) => {\r\n        const message = createChatBotMessage(`Finally, what is the purpose of this loan? (e.g., Car, Home, Personal)`);\r\n        updateState(message, { loanAmount: parseFloat(amount) });\r\n    };\r\n\r\np\r\n    const handleLoanPurpose = async (purpose, prevState) => {\r\n        const applicationData = {\r\n            full_name: prevState.fullName,\r\n            monthly_income: prevState.monthlyIncome,\r\n            loan_amount: prevState.loanAmount,\r\n            loan_purpose: purpose,\r\n        };\r\n\r\n        try {\r\n            const response = await api.post('/applications', applicationData);\r\n            const newAppId = response.data.id;\r\n            setApplicationId(newAppId);\r\n\r\n            const message = createChatBotMessage(`Your application has been created with ID: ${newAppId}. Now, please upload your documents.`, {\r\n                widget: 'docUploader',\r\n                payload: { applicationId: newAppId },\r\n            });\r\n            updateState(message);\r\n        } catch (error) {\r\n            const message = createChatBotMessage(\"Sorry, there was an error creating your application. Please try again.\");\r\n            updateState(message);\r\n            console.error(\"Application creation failed\", error);\r\n        }\r\n    };\r\n    \r\n    const updateState = (message, payload = {}) => {\r\n        setState((prev) => ({\r\n            ...prev,\r\n            messages: [...prev.messages, message],\r\n            ...payload,\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {React.Children.map(children, (child) => {\r\n                return React.cloneElement(child, {\r\n                    actions: {\r\n                        handleStart,\r\n                        handleFullName,\r\n                        handleIncome,\r\n                        handleLoanAmount,\r\n                        handleLoanPurpose,\r\n                    },\r\n                });\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst MessageParser = ({ children, actions }) => {\r\n    const parse = (message) => {\r\n        const lowerCaseMessage = message.toLowerCase();\r\n        \r\n        if (lowerCaseMessage.includes(\"start\") || lowerCaseMessage.includes(\"hello\") || lowerCaseMessage.includes(\"hi\")) {\r\n            actions.handleStart();\r\n        } else if (children.props.state.messages.slice(-1)[0]?.message.includes('full name')) {\r\n            actions.handleFullName(message);\r\n        } else if (children.props.state.messages.slice(-1)[0]?.message.includes('monthly income')) {\r\n            actions.handleIncome(message);\r\n        } else if (children.props.state.messages.slice(-1)[0]?.message.includes('loan amount')) {\r\n            actions.handleLoanAmount(message);\r\n        } else if (children.props.state.messages.slice(-1)[0]?.message.includes('purpose')) {\r\n            actions.handleLoanPurpose(message, children.props.state);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {React.Children.map(children, (child) => {\r\n                return React.cloneElement(child, {\r\n                    parse: parse,\r\n                    actions,\r\n                });\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ChatbotWrapper = ({ user }) => {\r\n    const config = {\r\n        botName: 'CreditBot',\r\n        initialMessages: [\r\n            {\r\n                message: `Hello ${user.email}! Type \"start\" to begin a new credit application.`,\r\n                type: 'bot',\r\n                id: 1,\r\n            },\r\n        ],\r\n        widgets: [\r\n            {\r\n                widgetName: 'docUploader',\r\n                widgetFunc: (props) => {\r\n                    const { applicationId } = props.payload;\r\n                    return (\r\n                        <div>\r\n                            <FileUploader applicationId={applicationId} docType=\"aadhaar\" onUploadSuccess={() => console.log('Aadhaar uploaded!')} />\r\n                            <FileUploader applicationId={applicationId} docType=\"salary_slip\" onUploadSuccess={() => console.log('Salary slip uploaded!')} />\r\n                        </div>\r\n                    );\r\n                },\r\n                mapStateToProps: [\"applicationId\"],\r\n            },\r\n        ],\r\n    };\r\n\r\n    return (\r\n        <div className=\"chatbot-container\">\r\n            <Chatbot\r\n                config={config}\r\n                messageParser={MessageParser}\r\n                actionProvider={ActionProvider}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatbotWrapper;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}