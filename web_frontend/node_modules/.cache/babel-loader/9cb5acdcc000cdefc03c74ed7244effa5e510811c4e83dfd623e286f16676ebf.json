{"ast":null,"code":"import { io } from \"socket.io-client\";\nconst URL = \"ws://localhost:8000\"; // Your backend WebSocket URL\nlet socket;\nexport const connectSocket = (userId, onMessageCallback) => {\n  // Disconnect previous socket if it exists\n  if (socket) {\n    socket.disconnect();\n  }\n\n  // Pass user_id in query for initial connection auth\n  socket = io(URL, {\n    transports: ['websocket'],\n    query: {\n      userId\n    } // Pass user ID for backend to map connection\n  });\n  socket.on(\"connect\", () => {\n    console.log(`Socket connected with ID: ${socket.id} for user ${userId}`);\n  });\n\n  // A generic event for server-pushed messages\n  socket.on(\"notification\", data => {\n    console.log(\"Notification received:\", data);\n    if (onMessageCallback) {\n      onMessageCallback(data);\n    }\n  });\n  socket.on(\"disconnect\", () => {\n    console.log(\"Socket disconnected\");\n  });\n};\nexport const disconnectSocket = () => {\n  if (socket) {\n    socket.disconnect();\n  }\n};","map":{"version":3,"names":["io","URL","socket","connectSocket","userId","onMessageCallback","disconnect","transports","query","on","console","log","id","data","disconnectSocket"],"sources":["C:/Users/shree/ai-credit-underwriting-system/web_frontend/src/services/socket.js"],"sourcesContent":["import { io } from \"socket.io-client\";\r\n\r\nconst URL = \"ws://localhost:8000\"; // Your backend WebSocket URL\r\nlet socket;\r\n\r\nexport const connectSocket = (userId, onMessageCallback) => {\r\n  // Disconnect previous socket if it exists\r\n  if (socket) {\r\n      socket.disconnect();\r\n  }\r\n\r\n  // Pass user_id in query for initial connection auth\r\n  socket = io(URL, { \r\n    transports: ['websocket'],\r\n    query: { userId } // Pass user ID for backend to map connection\r\n  });\r\n\r\n  socket.on(\"connect\", () => {\r\n    console.log(`Socket connected with ID: ${socket.id} for user ${userId}`);\r\n  });\r\n  \r\n  // A generic event for server-pushed messages\r\n  socket.on(\"notification\", (data) => {\r\n    console.log(\"Notification received:\", data);\r\n    if(onMessageCallback) {\r\n        onMessageCallback(data);\r\n    }\r\n  });\r\n\r\n  socket.on(\"disconnect\", () => {\r\n    console.log(\"Socket disconnected\");\r\n  });\r\n};\r\n\r\nexport const disconnectSocket = () => {\r\n  if (socket) {\r\n    socket.disconnect();\r\n  }\r\n};\r\n"],"mappings":"AAAA,SAASA,EAAE,QAAQ,kBAAkB;AAErC,MAAMC,GAAG,GAAG,qBAAqB,CAAC,CAAC;AACnC,IAAIC,MAAM;AAEV,OAAO,MAAMC,aAAa,GAAGA,CAACC,MAAM,EAAEC,iBAAiB,KAAK;EAC1D;EACA,IAAIH,MAAM,EAAE;IACRA,MAAM,CAACI,UAAU,CAAC,CAAC;EACvB;;EAEA;EACAJ,MAAM,GAAGF,EAAE,CAACC,GAAG,EAAE;IACfM,UAAU,EAAE,CAAC,WAAW,CAAC;IACzBC,KAAK,EAAE;MAAEJ;IAAO,CAAC,CAAC;EACpB,CAAC,CAAC;EAEFF,MAAM,CAACO,EAAE,CAAC,SAAS,EAAE,MAAM;IACzBC,OAAO,CAACC,GAAG,CAAC,6BAA6BT,MAAM,CAACU,EAAE,aAAaR,MAAM,EAAE,CAAC;EAC1E,CAAC,CAAC;;EAEF;EACAF,MAAM,CAACO,EAAE,CAAC,cAAc,EAAGI,IAAI,IAAK;IAClCH,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEE,IAAI,CAAC;IAC3C,IAAGR,iBAAiB,EAAE;MAClBA,iBAAiB,CAACQ,IAAI,CAAC;IAC3B;EACF,CAAC,CAAC;EAEFX,MAAM,CAACO,EAAE,CAAC,YAAY,EAAE,MAAM;IAC5BC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;EACpC,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMG,gBAAgB,GAAGA,CAAA,KAAM;EACpC,IAAIZ,MAAM,EAAE;IACVA,MAAM,CAACI,UAAU,CAAC,CAAC;EACrB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}